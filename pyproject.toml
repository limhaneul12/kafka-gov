[project]
name = "kafka-gov"
version = "0.1.0"
description = "Kafka governance project with FastAPI"
requires-python = ">=3.12,<3.14"
dependencies = [
    "fastapi>=0.117.1",
    "pydantic[email]>=2.11.9",
    "email-validator>=2.1.0",
    "pydantic-settings>=2.11.0",
    "uvicorn>=0.37.0",
    "sqlalchemy>=2.0.43",
    "alembic>=1.16.5",
    "asyncpg>=0.30.0",
    "aiomysql>=0.2.0",
    "pymysql>=1.1.0",
    "httpx>=0.28.1",
    "python-multipart>=0.0.20",
    "authlib>=1.6.4",
    "confluent-kafka[avro,schema-registry,schemaregistry]>=2.6.1",
    "aiokafka[lz4]>=0.12.0",
    "kafka-python-ng>=2.2.3",
    "kafka-python>=2.2.15",
    "requests>=2.32.5",
    "pandas>=2.3.2",
    "numpy>=2.3.3",
    "pyyaml>=6.0.2",
    "aiohttp>=3.12.15",
    "cachetools>=6.2.0",
    "websocket>=0.2.1",
    "websockets>=15.0.1",
    "websocket-client>=1.8.0",
    "setuptools>=80.9.0",
    "minio>=7.2.16",
    "argon2-cffi>=25.1.0",
    "orjson>=3.11.3",
    "dependency-injector>=4.48.2",
    "prometheus-client>=0.20.0",
    "sentry-sdk>=2.13.0",
    "python-json-logger>=2.0.7",
    "aiofile>=3.9.0",
    "aiofiles>=24.1.0",
    "pre-commit>=4.3.0",
    "asyncmy>=0.2.10",
]

[tool.pytest.ini_options]
addopts = [
    "-v",
    "--tb=short", 
    "--strict-markers",
    "--disable-warnings",
    "--cov=app",
    "--cov-report=html:htmlcov",
    "--cov-report=term-missing",
    "--cov-report=xml",
]
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "slow: Slow running tests",
    "kafka: Tests that require Kafka",
    "database: Tests that require database",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
branch = true
source = ["app"]
omit = [
  "**/__init__.py",
  "**/container.py",  # DI 컨테이너는 통합 테스트에서 테스트
  "**/infrastructure/**",  # Infrastructure는 통합 테스트에서
  "**/interface/router.py",  # API 라우터는 통합 테스트에서
  "app/main.py",  # 메인 진입점
  "app/shared/**",  # 공통 유틸리티 제외
]

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 40

[dependency-groups]
dev = [
  "ruff>=0.13.2",
  "pyrefly>=0.34.0",
  "pytest>=8.4.2",
  "pytest-asyncio>=1.2.0",
  "pytest-cov>=5.0",
  "pytest-xdist>=3.6.0",  # 병렬 테스트 실행
  "coverage>=7.6",
  "pip-audit>=2.7",
  "bandit>=1.7",
  "aiosqlite>=0.20.0",
  ]

[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B", "SIM", "C4", "PIE", "PERF", "N", "RUF"]
ignore = [
    "E501",      # Line too long (handled by formatter)
    "PYI041",    # Use `float` instead of `int | float`
    "UP040",     # Type alias syntax
    "B008",      # Do not perform function calls in argument defaults (FastAPI Depends pattern)
]
exclude = [
    "**/tests/**",
    "**/migrations/**",
]

[tool.ruff.lint.isort]
combine-as-imports = true
[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pyrefly]
python-version = "3.12"
project-includes = ["app"]
project-excludes = [
    "**/tests/**",
    "**/__pycache__",
    "**/.venv/**",
    "**/venv/**",
    "**/.mypy_cache/**",
    "**/.ruff_cache/**",
    "**/build/**",
    "**/dist/**",
    "**/.pytest_cache/**",
    "**/.git/**",
]
search-path = ["app"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]
