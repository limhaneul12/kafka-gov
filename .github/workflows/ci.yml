name: CI

on:
  push:
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # CI 타임아웃 설정

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Upgrade pip and install uv
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv

      - name: Sync dependencies (runtime + dev)
        run: |
          uv sync --group dev --frozen

      - name: Code formatting and linting
        run: |
          # Apply formatting first, then check if any changes were made (excluding uv.lock)
          uv run ruff format .
          # Check only Python files for formatting changes, ignore uv.lock
          if ! git diff --quiet -- '*.py' '*.pyi'; then
            echo "❌ Code formatting issues found. Please run 'uv run ruff format .' locally and commit the changes."
            git diff --name-only -- '*.py' '*.pyi'
            exit 1
          fi
          # Run linting
          uv run ruff check .

      - name: Type checking
        run: |
          uv run pyrefly check

      - name: Run tests with coverage (optimized)
        run: |
          # Clean Python cache to avoid import conflicts
          find . -type d -name "__pycache__" -exec rm -rf {} + || true
          find . -name "*.pyc" -delete || true
          # Run tests with parallel execution and fail-fast for efficiency
          uv run pytest -n auto --maxfail=5 --tb=short --cov=app --cov-report=xml --cov-report=term-missing --durations=10
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: success()
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

      - name: Security checks
        run: |
          # Vulnerability scan
          uv run pip-audit --progress-spinner off
          # Security static analysis
          uv run bandit -r app -x tests -ll